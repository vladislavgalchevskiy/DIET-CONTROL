// Generated by view binder compiler. Do not edit!
package com.eatingdiary.zwjnevw.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.eatingdiary.zwjnevw.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class DialogAddFoodBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button addButtonNewFood;

  @NonNull
  public final EditText caloriesAdd;

  @NonNull
  public final Button cancelButton;

  @NonNull
  public final EditText carbsAdd;

  @NonNull
  public final EditText fatAdd;

  @NonNull
  public final EditText name;

  @NonNull
  public final EditText proteinAdd;

  @NonNull
  public final LinearLayout someId;

  private DialogAddFoodBinding(@NonNull LinearLayout rootView, @NonNull Button addButtonNewFood,
      @NonNull EditText caloriesAdd, @NonNull Button cancelButton, @NonNull EditText carbsAdd,
      @NonNull EditText fatAdd, @NonNull EditText name, @NonNull EditText proteinAdd,
      @NonNull LinearLayout someId) {
    this.rootView = rootView;
    this.addButtonNewFood = addButtonNewFood;
    this.caloriesAdd = caloriesAdd;
    this.cancelButton = cancelButton;
    this.carbsAdd = carbsAdd;
    this.fatAdd = fatAdd;
    this.name = name;
    this.proteinAdd = proteinAdd;
    this.someId = someId;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static DialogAddFoodBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DialogAddFoodBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.dialog_add_food, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DialogAddFoodBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.add_button_new_food;
      Button addButtonNewFood = ViewBindings.findChildViewById(rootView, id);
      if (addButtonNewFood == null) {
        break missingId;
      }

      id = R.id.calories_add;
      EditText caloriesAdd = ViewBindings.findChildViewById(rootView, id);
      if (caloriesAdd == null) {
        break missingId;
      }

      id = R.id.cancel_button;
      Button cancelButton = ViewBindings.findChildViewById(rootView, id);
      if (cancelButton == null) {
        break missingId;
      }

      id = R.id.carbs_add;
      EditText carbsAdd = ViewBindings.findChildViewById(rootView, id);
      if (carbsAdd == null) {
        break missingId;
      }

      id = R.id.fat_add;
      EditText fatAdd = ViewBindings.findChildViewById(rootView, id);
      if (fatAdd == null) {
        break missingId;
      }

      id = R.id.name;
      EditText name = ViewBindings.findChildViewById(rootView, id);
      if (name == null) {
        break missingId;
      }

      id = R.id.protein_add;
      EditText proteinAdd = ViewBindings.findChildViewById(rootView, id);
      if (proteinAdd == null) {
        break missingId;
      }

      LinearLayout someId = (LinearLayout) rootView;

      return new DialogAddFoodBinding((LinearLayout) rootView, addButtonNewFood, caloriesAdd,
          cancelButton, carbsAdd, fatAdd, name, proteinAdd, someId);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
